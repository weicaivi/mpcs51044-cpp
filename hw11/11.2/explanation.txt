Runtime Measurements:

Class template approach: 1,100 μs
Function template approach: 16,843 μs
The class template approach was significantly faster at runtime (about 15x faster)


Even though both approaches do the same calculation and produce the same results, the class template version runs much faster.

The class template version's calculations are fully performed at compile time. The compiler can completely optimize away the template metaprogramming overhead. At runtime, it's just accessing pre-computed constant values

In contrast, the function template version might involve more runtime operations, despite also being constexpr. The compiler may not be optimizing it as aggressively.